{"ast":null,"code":"var _jsxFileName = \"/home/rishab/react/notes/notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport NotesList from './components/NotesList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //const [notes, setNotes] = useState([]);\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"Test Note\",\n    date: \"07/05/2023\"\n  }, {\n    id: nanoid(),\n    text: \"Test Note\",\n    date: \"07/05/2023\"\n  }, {\n    id: nanoid(),\n    text: \"Test Note\",\n    date: \"08/05/2023\"\n  }]);\n  const [searchText, setSearchText] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('react-notes-app-data', JSON.stringify(notes));\n  }, [notes]);\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && 'dark-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"CjHiCNQbILfOaTch26jJkO60OWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","nanoid","Header","Search","NotesList","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","text","date","searchText","setSearchText","darkMode","setDarkMode","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","Date","newNote","toLocaleDateString","newNotes","deleteNote","filter","note","className","children","handleToggleDarkMode","fileName","_jsxFileName","lineNumber","columnNumber","handleSearchNote","toLowerCase","includes","handleAddNote","handleDeleteNote","_c","$RefreshReg$"],"sources":["/home/rishab/react/notes/notes-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport NotesList from './components/NotesList';\n\nconst App = () => {\n    //const [notes, setNotes] = useState([]);\n    const [notes, setNotes] = useState([\n        {\n            id: nanoid(),\n            text: \"Test Note\",\n            date: \"07/05/2023\"\n        },\n        {\n            id: nanoid(),\n            text: \"Test Note\",\n            date: \"07/05/2023\"\n        },\n        {\n            id: nanoid(),\n            text: \"Test Note\",\n            date: \"08/05/2023\"\n        }\n    ]);\n\n    const [searchText, setSearchText] = useState('');\n\n    const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => {\n        const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n        if (savedNotes) {\n            setNotes(savedNotes);\n        }\n    }, []);\n  \n    useEffect(() => {\n        localStorage.setItem('react-notes-app-data', JSON.stringify(notes));\n    }, [notes]);\n\n    const addNote = (text) => {\n        const date = new Date();\n        const newNote = {\n            id: nanoid(),\n            text: text,\n            date: date.toLocaleDateString()\n        };\n        const newNotes = [...notes, newNote];\n        setNotes(newNotes);\n    };\n\n    const deleteNote = (id) => {\n        const newNotes = notes.filter((note) => note.id !== id);\n        setNotes(newNotes);\n    };\n\n    return (\n        <div className={`${darkMode && 'dark-mode'}`}>\n            <div className=\"container\">\n                <Header handleToggleDarkMode={setDarkMode}/>\n                <Search handleSearchNote={setSearchText}/>\n                <NotesList notes={notes.filter((note) => note.text.toLowerCase().includes(searchText))} handleAddNote={addNote} handleDeleteNote={deleteNote}/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}